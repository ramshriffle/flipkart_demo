c
@user
c
@user
c
@user
c
@user
c
user
c
user
c
user
c
@current_user
current_user
c
user
c
c\
c
params
c
user
c
user
c
user
c
user
c
user
c
user
c
user
c
user
c
user
c
user
c
user ||= User.new
c
current_user
c
user.type
user ||= User.new
user
c
user
c
user
c
user
cc
c
user
c
user
c
user
c
user
c
user
c
user
c
user
c
user
c
user
c
current_user
c
user
c
n
c
n
c
OrderItem.where(product: self.product).sum(:quantity)
c
quantity
quantity > available_quantity
available_quantity = self.product.quantity - self.sum_product_orders
c
n
c
OrderItem.where(product: self.product).sum(:quantity)
c
quantity
available_quantity
available_quantity = self.product.quantity - self.sum_product_orders
self.sum_product_orders
self.product.quantity
c
params[:product_id]
c
self.sum_product_orders
self.product.quantity
c
params[:product_id]
product_id
c
n
cart_item
cart_item = @current_user.cart_items.find_by_product_id(params[:product_id])
params[:product_id]
c
quantity
self.product.quantity - self.sum_product_orders
c
sum_product_orders
c
self.product.quantity - self.sum_product_orders
c
OrderItem.where(product: self.product).sum(:quantity)
c
available_quantity = self.product.quantity - self.sum_post_order
quantity > available_quantity
quantity
c
OrderItem.where(product: self.product).sum(:quantity)
c
OrderItem.where("id != ?", self.id).where(product: self.product).sum(:quantity)
c
OrderItem.where("id != ?", self.id).where(product: self.product).sum(:quantity)
c
Order.where("id != ?", self.id).where(:post => self.post).sum(:quantity)
c
OrderItem.where(product: self.product).sum(:quantity)
c
OrderItem.where(product: self.product).sum(:quantity)
self.sum_product_orders <= self.product.quantity
c
OrderItem.where(product: self.product).sum(:quantity)
c
self.sum_product_orders <= self.product.quantity
c
OrderItem.where(product: self.product).sum(:quantity)
c
 self.sum_product_orders <= self.product.quantity
unless self.sum_product_orders <= self.product.quantity
c
OrderItem.where(product: self.product).sum(:quantity)
self.product
OrderItem.where(product: self.product)
c
self.sum_product_orders <= self.product.quantity
self.sum_product_orders
self.product.quantity
quantity
c
self.sum_product_orders <= self.product.quantity
OrderItem.where(:product => self.product).sum(:quantity)
c
order_params
c
product_params
c
order_params
corder_params
cart_items
c
cart_items
c
@current_user.addresses.find_by(id: params[:address_id])
c
@address.user_id == @current_user.id
c
params[:id]
c
params[:id]
c
params[:id]
c
params[:id]
c
params[:id]
params[:address_id]
c
params[:address_id]
c
params[:address_id]
c
order_params
c
params[:address_id]
c
params[:address_id]
c
n
order_params
c
params[:address_id]
c
params[:address_id]
c
@current_user.addresses.find_by_id(params[:address_id])
params[:address_id]
c
n
user_params
c
n
c
n
c
n
c
self.user_id.present?
c
user_params
c
user.save
user
user = User.new(user_params)
user
user = User.new(user_params
User.new(user_params)
user_params
c
@current_user.addresses.find_by_id(params[:address_id])
c
@current_user.addresses.find_by_id(params[:address_id])
c
order_item_params
c
@current_user.orders.new
c
user
c
current_user
c
current_user
c
@current_user
current_user
user
c
user
c
user
c
user
c
user
c
user
c
Customer.cart
